%h2.title= "Account: #{params[:account_name]}"

- if !@characters.any?
  %span This account either doesn't exist or doesn't have any characters associated with it.
- else
  %p
    = "This account has #{@characters.count} associated character#{@characters.count > 1 ? "s" : ""}."

  %form.account-fields
    %table.account-fields
      %thead
        %tr
          %th General
          %th Allegiance
          %th Attributes
          %th Skills
          %th Augmentations
          %th Auras
          %th Ratings
          %th Other
      %tbody
        %tr
          - %w[general allegiance attributes skills augmentations auras ratings other].each do |group|
            %td
              %select{:multiple => "multiple", :name => "#{group}[]", :size => 10}
                - AccountHelper::fields_for(group.to_sym).each do |field|
                  - if(params[group] && params[group].include?(field[:name]))
                    %option{:value => field[:name], :selected => true}= field[:label]
                  - else
                    %option{:value => field[:name]}= field[:label]

    %input{:type => "submit", :value => "Update Table"}
    %a{:href => "/account/#{params['account_name']}"} Reset Fields

  %table.account.listing#listing
    %thead
      %tr
        %th Name
        %th Server
        - %w[general allegiance attributes skills augmentations auras ratings other].each do |group|
          - if(params.has_key?(group))
            - params[group].each do |name|
              %th= AccountHelper::field_label(group, name)
    %tbody
      - @characters.each do |character|
        %tr
          %td
            %a{:href => "/#{character[:server]}/#{character[:name]}"}= character[:name]
          %td.center= character[:server]
          - %w[general allegiance attributes skills augmentations auras ratings other].each do |group|
            - if(params.has_key?(group))
              - params[group].each do |name|
                %td= AccountHelper::field_value(group, name).call(character)

%script{:type => "text/javascript", :src => javascript_path('tablesort.min')}
%script{:type => "text/javascript", :src => javascript_path('tablesort.numeric')}
%script{:type => "text/javascript", :src => javascript_path('tablesort.date')}
%script{:type => "text/javascript", :src => javascript_path('tablesort.commasep')}

:javascript
  new Tablesort(document.getElementById("listing"))
